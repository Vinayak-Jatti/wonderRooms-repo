<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Room Rentals</title>
    <!-- Bootstrap CSS -->
    <link
      href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css"
      rel="stylesheet"
    />
    <style>
      body,
      html {
        height: 100%;
        margin: 0;
        font-family: "Arial", sans-serif;
        overflow: hidden;
      }

      canvas {
        position: absolute;
        top: 0;
        left: 0;
        z-index: -1;
      }

      .entry-container {
        height: 100%;
        display: flex;
        justify-content: center;
        align-items: center;
        flex-direction: column;
        text-align: center;
        color: white;
        padding: 20px;
      }

      .entry-container h1 {
        font-size: 3rem;
        margin-bottom: 20px;
        text-shadow: 2px 2px 10px rgba(0, 0, 0, 0.7);
        color: #000000;
      }

      .entry-container p {
        font-size: 1.2rem;
        margin-bottom: 30px;
        text-shadow: 1px 1px 8px rgba(0, 0, 0, 0.5);
        color: #fe424d;
      }

      /* Gradient animated button */
      .btn-gradient {
        font-size: 1.2rem;
        padding: 12px 25px;
        border: none;
        border-radius: 50px;
        color: #fff;
        font-weight: 600;
        cursor: pointer;
        background: linear-gradient(45deg, #6a11cb, #2575fc, #ff6b6b, #ffb347);
        background-size: 300% 300%;
        animation: gradientMove 5s ease infinite;
        transition: transform 0.3s ease, box-shadow 0.3s ease;
        text-decoration: none;
        border: 2px solid #c8ff00;
      }

      .btn-gradient:hover {
        transform: translateY(-3px) scale(1.05);
        box-shadow: 0 8px 25px rgba(0, 0, 0, 0.4);
        color: #fff;
      }

      @keyframes gradientMove {
        0% {
          background-position: 0% 50%;
        }
        50% {
          background-position: 100% 50%;
        }
        100% {
          background-position: 0% 50%;
        }
      }
    </style>
  </head>
  <body>
    <canvas id="bgCanvas"></canvas>

    <div class="entry-container">
      <h1>Welcome to WonderRooms</h1>
      <p>Find your perfect room or list your space easily!</p>
      <a href="/listings" class="btn btn-primary btn-gradient">Let's Get-In</a>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>
    <script>
      const canvas = document.getElementById("bgCanvas");
      const ctx = canvas.getContext("2d");
      canvas.width = window.innerWidth;
      canvas.height = window.innerHeight;

      let particlesArray = [];
      const colors = [
        "#ff6b6b",
        "#feca57",
        "#48dbfb",
        "#1dd1a1",
        "#111",
        "#fe424d",
      ];

      class Particle {
        constructor() {
          this.x = Math.random() * canvas.width;
          this.y = Math.random() * canvas.height;
          this.size = Math.random() * 5 + 1;
          this.speedX = Math.random() * 1 - 0.5;
          this.speedY = Math.random() * 1 - 0.5;
          this.color = colors[Math.floor(Math.random() * colors.length)];
        }

        update() {
          this.x += this.speedX;
          this.y += this.speedY;
          if (this.x < 0 || this.x > canvas.width) this.speedX = -this.speedX;
          if (this.y < 0 || this.y > canvas.height) this.speedY = -this.speedY;
        }

        draw() {
          ctx.fillStyle = this.color;
          ctx.beginPath();
          ctx.arc(this.x, this.y, this.size, 0, Math.PI * 2);
          ctx.fill();
        }
      }

      function init() {
        particlesArray = [];
        for (let i = 0; i < 100; i++) {
          particlesArray.push(new Particle());
        }
      }

      function animate() {
        ctx.clearRect(0, 0, canvas.width, canvas.height);
        particlesArray.forEach((p) => {
          p.update();
          p.draw();
        });
        requestAnimationFrame(animate);
      }

      window.addEventListener("resize", () => {
        canvas.width = window.innerWidth;
        canvas.height = window.innerHeight;
        init();
      });

      init();
      animate();
    </script>
  </body>
</html>
